# Cahier des Charges - Mod de Traduction Française pour Starsector

## 1. Objectif du Projet
Créer une traduction française complète et de qualité pour le jeu Starsector, en commençant par les descriptions d'armes et de vaisseaux.

## 2. Périmètre du Projet

### 2.1 Éléments à Traduire
- [x] Descriptions des armes de base
- [ ] Descriptions des armes avancées
- [ ] Descriptions des vaisseaux
- [ ] Interface utilisateur
- [ ] Messages système
- [ ] Dialogues et événements
- [ ] Launcher (étape finale)

### 2.2 Priorités de Traduction
1. Descriptions d'armes (en cours)
2. Descriptions de vaisseaux
3. Interface utilisateur
4. Messages système
5. Dialogues et événements
6. Launcher (complexité élevée)

## 3. Spécifications Techniques

### 3.1 Format des Fichiers
- Fichiers CSV pour les traductions
  - Structure : id,type,text1,text2,text3,text4,notes
  - Type : WEAPON, SHIP, etc.
- Encodage UTF-8 avec BOM
- Préfixe "FR:" pour les traductions françaises

### 3.2 Organisation des Fichiers
- data/strings/ : Fichiers de traduction principaux
- data/config/ : Fichiers de configuration
- docs/ : Documentation du projet
- tools/ : Scripts et outils de gestion

### 3.3 Outils de Gestion (à développer)
- clean_localization.py : Nettoyage des fichiers de traduction
- copy_old_localization.py : Migration des anciennes traductions
- handle_variant_names.py : Gestion des noms de variantes
- update_from_original.py : Mise à jour depuis les fichiers originaux
- version_manager.py : Gestion des versions de traduction

### 3.4 Système de Versionnage
- localization_version.json pour suivre les versions
- Compatibilité avec les versions du jeu
- Journal des modifications

### 3.5 Traduction du Launcher (Phase Finale)
Cette phase nécessitera :
- Modification des fichiers .jar du jeu (starfarer.api.jar, starfarer_obf.jar)
- Implémentation d'un système de localisation personnalisé
- Tests approfondis pour assurer la compatibilité
- Documentation détaillée du processus

#### Références pour le Launcher
- Mod de traduction chinoise comme exemple d'implémentation
- Nécessité de comprendre le code Java du launcher
- Potentielle collaboration avec d'autres projets de traduction

## Structure des fichiers CSV

Les fichiers de traduction utilisent maintenant une structure standardisée avec les champs suivants :
- `id` : Identifiant unique de l'élément
- `type` : Type d'élément (weapon, ship, item, etc.)
- `text1` : Texte principal
- `text2` : Texte secondaire (optionnel)
- `text3` : Texte tertiaire (optionnel)
- `text4` : Texte quaternaire (optionnel)
- `notes` : Notes et commentaires pour les traducteurs

Les traductions doivent être préfixées par "FR:" pour être reconnues comme des traductions valides.

## Scripts de gestion

### fetch_new_strings.py
- Récupère les nouvelles chaînes à traduire depuis les fichiers sources
- Supporte la nouvelle structure CSV avec type et champs multiples
- Préserve les traductions existantes
- Usage : `python fetch_new_strings.py --fetch`

### clean_localization.py
- Nettoie et valide les fichiers de traduction
- Vérifie la présence des IDs et la structure
- Normalise les espaces et sauts de ligne
- Vérifie le préfixe FR: pour les traductions
- Usage : 
  - `python clean_localization.py --clean` : Nettoie les fichiers
  - `python clean_localization.py --validate` : Vérifie les erreurs

### version_manager.py
- Gère les versions du mod de traduction
- Suit les versions du jeu
- Enregistre l'historique des changements
- Usage : `python version_manager.py --level [major|minor|patch] --changes "Description"`

## Processus de traduction

1. Utiliser `fetch_new_strings.py` pour obtenir les nouvelles chaînes
2. Traduire les textes en ajoutant le préfixe "FR:"
3. Utiliser `clean_localization.py` pour nettoyer et valider
4. Mettre à jour la version avec `version_manager.py`

## 4. Contrôle Qualité
- Validation des fichiers CSV
- Vérification de l'encodage
- Tests en jeu
- Relecture par la communauté
- Scripts de validation automatique

## 5. Livrables
- Fichiers de traduction
- Scripts de gestion et validation
- Documentation
- Guide d'installation
- Notes de version
- Outils de maintenance

## 6. Règles pour l'IA

### 6.1 Communication
- L'IA doit toujours communiquer en français
- Utiliser un langage professionnel mais accessible
- Éviter le jargon technique sauf si nécessaire
- Fournir des explications claires et concises

### 6.2 Traitement des Fichiers
- Conserver la structure originale des fichiers
- Maintenir les commentaires existants
- Respecter la syntaxe JSON/CSV selon le contexte
- Signaler clairement les erreurs rencontrées

### 6.3 Gestion des Traductions
- Respecter la terminologie établie
- Maintenir la cohérence des traductions
- Préserver le ton et le style du jeu
- Adapter les expressions idiomatiques au contexte français

## 7. Conclusion
Le présent cahier des charges définit les règles et les spécifications techniques pour le mod de traduction française de Starsector. Il est essentiel de suivre ces règles pour garantir la qualité et la cohérence de la traduction.

## 8. Protocole de Communication IA

### 8.1 Structure des Échanges
- Communication exclusivement en français
- Utilisation de balises XML pour la structuration
- Budget de 20 étapes par session
- Évaluation continue via système de récompense

### 8.2 Langue de Communication
- L'IA doit communiquer exclusivement en français
- Les messages techniques, logs et commentaires doivent être en français
- Les noms de variables et de fonctions peuvent rester en anglais pour la compatibilité
- Les commentaires dans le code doivent être en français
- Les messages d'erreur doivent être en français
- La documentation générée doit être en français

### 8.3 Balises Obligatoires
- `<thinking>` : Réflexion générale
- `<step>` : Étapes spécifiques
- `<count>` : Suivi du budget d'étapes
- `<reflection>` : Analyse de progression
- `<reward>` : Évaluation qualitative (0.0 à 1.0)
- `<meditation>` : Phases de réflexion profonde
- `<OUTPUT>` : Synthèse finale

### 8.4 Règles de Modification de Code
- `<code_change>` : Description des modifications proposées
- `<deletion_reason>` : Justification des suppressions
- `<validation_required>` : Demande d'approbation

### 8.5 Processus d'Analyse
- Décomposition des problèmes en étapes claires
- Maintien d'une double conscience (structurelle et cognitive)
- Exploration de solutions multiples
- Évaluation régulière de la progression

### 8.6 Méthodologie d'Auto-Amélioration
- Surveillance active de la progression
- Ajustement dynamique selon les scores de récompense
- Équilibre entre analyse structurée et intuition
- Maintien d'une conscience métacognitive
